AddCSLuaFile()

ENT.Type = "anim"
ENT.Base = "base_gmodentity"
ENT.PrintName = "–î–æ—Å–∫–∞ —Ä–æ–∑—ã—Å–∫–∞"
ENT.Category = "Helix"
ENT.Author = "–í–∞—à–µ –∏–º—è"
ENT.Spawnable = true
ENT.AdminSpawnable = true

function ENT:SetupDataTables()
    self:NetworkVar("Int", 0, "WantedCount")
    self:NetworkVar("Int", 1, "TotalBounty")
end

if SERVER then
    function ENT:Initialize()
        self:SetModel("models/props_lab/corkboard001.mdl")
        self:SetSolid(SOLID_BBOX)
        self:SetUseType(SIMPLE_USE)
        
        self:PhysicsInit(SOLID_BBOX)
        self:SetMoveType(MOVETYPE_NONE)
        
        self:SetWantedCount(0)
        self:SetTotalBounty(0)
        
        local phys = self:GetPhysicsObject()
        if IsValid(phys) then
            phys:EnableMotion(false)
            phys:Sleep()
        end
    end

    function ENT:Use(activator)
        if not IsValid(activator) or not activator:IsPlayer() then return end
        
        -- –ü–æ–ª—É—á–∞–µ–º –ø–ª–∞–≥–∏–Ω —á–µ—Ä–µ–∑ ix.plugin.Get
        local bountyPlugin = ix.plugin.Get("bounty")
        if not bountyPlugin then return end
        
        -- –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∏–≥—Ä–æ–∫ –ø–æ–ª–∏—Ü–µ–π—Å–∫–∏–π (–∑–∞–º–µ–Ω–∏—Ç–µ FACTION_CP –Ω–∞ –≤–∞—à ID –ø–æ–ª–∏—Ü–∏–∏)
        if activator:Team() ~= FACTION_POLICE then
            activator:Notify("–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ä–≥–∞–Ω–æ–≤!")
            return
        end
        
        net.Start("BountyBoardMenu")
        net.Send(activator)
        
        -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ—Å–∫–∏
        self:UpdateBoardStats()
    end

    function ENT:Think()
        self:UpdateBoardStats()
        self:NextThink(CurTime() + 5)
        return true
    end

    function ENT:UpdateBoardStats()
        local bountyPlugin = ix.plugin.Get("bounty")
        if not bountyPlugin then return end
        
        local wantedCount = 0
        local totalBounty = 0
        
        for steamID, data in pairs(bountyPlugin.wantedPlayers or {}) do
            if IsValid(data.player) then
                wantedCount = wantedCount + 1
                totalBounty = totalBounty + data.totalBounty
            end
        end
        
        self:SetWantedCount(wantedCount)
        self:SetTotalBounty(totalBounty)
    end
end

if CLIENT then
    -- –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–ª—è –¥–æ—Å–∫–∏ —Ä–æ–∑—ã—Å–∫–∞
    PLUGIN = PLUGIN or {}
    PLUGIN.boardStatusText = PLUGIN.boardStatusText or {
        ["Idle"] = "–ü—É—Å—Ç–∞—è",
        ["Active"] = "–ê–∫—Ç–∏–≤–Ω–∞"
    }

    -- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    function SafeGetClass(ent)
        if not IsValid(ent) then return "invalid" end
        if not isfunction(ent.GetClass) then return "no_getclass" end
        return ent:GetClass() or "unknown"
    end

    function ENT:Initialize()
        self.statusInitialized = false
        self.lastStatusCheck = 0
    end

    function ENT:Think()
        if CurTime() > self.lastStatusCheck + 1 then
            self.lastStatusCheck = CurTime()
            
            if isfunction(self.GetWantedCount) and isfunction(self.GetTotalBounty) then
                self.statusInitialized = true
            end
        end
        
        self:NextThink(CurTime() + 0.5)
        return true
    end

    function ENT:Draw()
        self:DrawModel()
        
        if not self.statusInitialized then return end
        
        local distance = self:GetPos():Distance(LocalPlayer():GetPos())
        if distance > 300 then return end
        
        local ang = self:GetAngles()
        ang:RotateAroundAxis(ang:Up(), 90)
        ang:RotateAroundAxis(ang:Forward(), 90)
        
        -- –ü–æ–∑–∏—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –Ω–∞–¥ –¥–æ—Å–∫–æ–π
        local pos = self:GetPos() + self:GetUp() * 60 + self:GetForward() * 5
        
        cam.Start3D2D(pos, ang, 0.1)
            -- –§–æ–Ω —Å –∑–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–º–∏ —É–≥–ª–∞–º–∏ (–µ–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å)
            draw.RoundedBox(8, -120, -25, 240, 50, Color(0, 0, 0, 230))
            
            -- –†–∞–º–∫–∞ –∫—Ä–∞—Å–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ (—Å—Ç–∏–ª—å –ø–æ–ª–∏—Ü–∏–∏)
            surface.SetDrawColor(255, 0, 0, 255)
            surface.DrawOutlinedRect(-120, -25, 240, 50, 2)
            
            -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
            draw.SimpleText("–î–û–°–ö–ê –†–û–ó–´–°–ö–ê", "DermaDefaultBold", 0, -15, 
                Color(255, 0, 0), TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER)
            
            -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            draw.SimpleText("–í —Ä–æ–∑—ã—Å–∫–µ: " .. self:GetWantedCount() .. " | –ù–∞–≥—Ä–∞–¥–∞: ‚òã" .. self:GetTotalBounty(), 
                "DermaDefault", 0, 5, Color(255, 255, 255), TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER)
        cam.End3D2D()
    end

    -- –•—É–∫ –¥–ª—è tooltip (–µ–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å)
    hook.Add("PopulateEntityInfo", "ixBountyBoardInfo", function(tooltip, ent)
        -- üî• –ó–ê–©–ò–¢–ù–´–ï –ü–†–û–í–ï–†–ö–ò
        if not IsValid(ent) then return end
        if not isfunction(ent.GetClass) then return end
        if SafeGetClass(ent) ~= "ix_bounty_board" then return end
        
        if not isfunction(ent.GetWantedCount) or not isfunction(ent.GetTotalBounty) then return end
        
        -- –ó–∞–≥–æ–ª–æ–≤–æ–∫ (–µ–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å)
        local name = tooltip:AddRow("name")
        name:SetText("–î–æ—Å–∫–∞ —Ä–æ–∑—ã—Å–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–æ–≤")
        name:SetBackgroundColor(Color(50, 0, 0))
        name:SetImportant()
        name:SizeToContents()
        
        -- –û–ø–∏—Å–∞–Ω–∏–µ (–µ–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å)
        local info = tooltip:AddRow("info")
        info:SetText("–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞–∑—ã—Å–∫–∏–≤–∞–µ–º—ã—Ö –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–æ–≤ –∏ –Ω–∞–≥—Ä–∞–¥")
        info:SetBackgroundColor(Color(30, 0, 0))
        info:SizeToContents()
        
        -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–µ–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å)
        local stats = tooltip:AddRow("stats")
        stats:SetText("–í —Ä–æ–∑—ã—Å–∫–µ: " .. ent:GetWantedCount() .. " | –ù–∞–≥—Ä–∞–¥–∞: ‚òã" .. ent:GetTotalBounty())
        stats:SetBackgroundColor(Color(40, 20, 0))
        stats:SizeToContents()
        
        -- –î–µ–π—Å—Ç–≤–∏–µ (–µ–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å)
        local action = tooltip:AddRow("action")
        action:SetText("–ù–∞–∂–º–∏—Ç–µ E –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ —Ä–æ–∑—ã—Å–∫–∞")
        action:SetBackgroundColor(Color(0, 0, 50))
        action:SizeToContents()
    end)
end
