AddCSLuaFile()

ENT.Type = "anim"
ENT.Base = "base_gmodentity"
ENT.PrintName = "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è"
ENT.Category = "Helix"
ENT.Author = "Your Name"
ENT.Spawnable = true
ENT.AdminSpawnable = true

-- –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
local CONFIG = {
    robberyTime = 120,
    minReward = 500,
    maxReward = 1500,
    policeFaction = FACTION_POLICE,
    cooldownTime = 300,
    alertRadius = 1500
}

local STATUS_TEXTS = {
    ["Idle"] = "–°–≤–æ–±–æ–¥–µ–Ω",
    ["Robbing"] = "–û–≥—Ä–∞–±–ª–µ–Ω–∏–µ...",
    ["Cooldown"] = "–ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞"
}

function ENT:SetupDataTables()
    self:NetworkVar("String", 0, "Status")
    self:NetworkVar("Float", 0, "RobberyTime")
    self:NetworkVar("Float", 1, "StartTime")
    self:NetworkVar("Float", 2, "CooldownEnd")
end

if SERVER then
    -- –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –ø–æ–ª–∏—Ü–∏–∏
    function ENT:AlertPolice(robber)
        if not IsValid(robber) then return end
        
        -- –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –ø–ª–∞–≥–∏–Ω–∞ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
        if PLUGIN and PLUGIN.AlertPolice then
            PLUGIN:AlertPolice(self, robber)
        else
            -- –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
            local robberName = robber:Name()
            local position = self:GetPos()
            
            for _, ply in ipairs(player.GetAll()) do
                if ply:GetCharacter() and ply:GetCharacter():GetFaction() == CONFIG.policeFaction then
                    ply:Notify("–í–ù–ò–ú–ê–ù–ò–ï! –û–≥—Ä–∞–±–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞!")
                    ply:Notify("–ü—Ä–µ—Å—Ç—É–ø–Ω–∏–∫: " .. robberName)
                    
                    if ix and ix.util then
                        ix.util.HoverText(ply, "üìç –û–≥—Ä–∞–±–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞", position, Color(255, 0, 0))
                    end
                end
            end
            
            ix.chat.Send(nil, "notice", "–í–ù–ò–ú–ê–ù–ò–ï! –ù–∞—á–∞—Ç–æ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞!", nil, nil, nil)
        end
    end

    -- –í—ã–¥–∞—á–∞ –Ω–∞–≥—Ä–∞–¥—ã
    function ENT:GiveReward(robber)
        if not IsValid(robber) or not robber:GetCharacter() then return end
        
        -- –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –ø–ª–∞–≥–∏–Ω–∞ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
        if PLUGIN and PLUGIN.GiveReward then
            PLUGIN:GiveReward(robber, self:EntIndex())
        else
            -- –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
            local reward = math.random(CONFIG.minReward, CONFIG.maxReward)
            local char = robber:GetCharacter()
            
            char:GiveMoney(reward)
            robber:Notify("–í—ã —É—Å–ø–µ—à–Ω–æ –æ–≥—Ä–∞–±–∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä! –ü–æ–ª—É—á–µ–Ω–æ: " .. reward .. "‚òã")
            
            ix.chat.Send(nil, "notice", "–û–≥—Ä–∞–±–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.", nil, nil, nil)
        end
    end

    function ENT:Initialize()
        self:SetModel("models/props_junk/wood_crate001a.mdl")
        self:PhysicsInit(SOLID_VPHYSICS)
        self:SetMoveType(MOVETYPE_VPHYSICS)
        self:SetSolid(SOLID_VPHYSICS)
        self:SetUseType(SIMPLE_USE)

        local phys = self:GetPhysicsObject()
        if IsValid(phys) then
            phys:Wake()
        end

        self:SetStatus("Idle")
        self:SetRobberyTime(0)
        self:SetStartTime(0)
        self:SetCooldownEnd(0)
        
        self.robber = nil
        self.robberyActive = false
    end

    -- –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è
    function ENT:ResetRobbery()
        self:SetStatus("Idle")
        self:SetRobberyTime(0)
        self:SetStartTime(0)
        self.robber = nil
        self.robberyActive = false
        
        if self.robberyTimer then
            timer.Remove(self.robberyTimer)
            self.robberyTimer = nil
        end
        
        -- –£–¥–∞–ª—è–µ–º –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–≥—Ä–∞–±–ª–µ–Ω–∏–π –ø–ª–∞–≥–∏–Ω–∞
        if PLUGIN and PLUGIN.activeRobberies then
            PLUGIN.activeRobberies[self:EntIndex()] = nil
        end
    end

    -- –ù–∞—á–∞–ª–æ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏
    function ENT:StartCooldown()
        self:SetStatus("Cooldown")
        self:SetCooldownEnd(CurTime() + CONFIG.cooldownTime)
        
        timer.Simple(CONFIG.cooldownTime, function()
            if IsValid(self) then
                self:ResetRobbery()
            end
        end)
    end

    -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–∏—Ü–∏—é –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏
    function ENT:PoliceNearby()
        for _, ply in ipairs(player.GetAll()) do
            if ply:GetCharacter() and ply:GetCharacter():GetFaction() == CONFIG.policeFaction then
                if ply:GetPos():Distance(self:GetPos()) < 500 then
                    return true
                end
            end
        end
        return false
    end

    function ENT:Use(ply)
        if not IsValid(ply) or not ply:GetCharacter() then return end
        
        local status = self:GetStatus()
        
        if status == "Cooldown" then
            local timeLeft = math.Round(self:GetCooldownEnd() - CurTime())
            ply:Notify("–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ–ø—É—Å—Ç–æ—à–µ–Ω! –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: " .. timeLeft .. " —Å–µ–∫")
            return
        end
        
        if status == "Robbing" then
            if self.robber == ply then
                ply:Notify("–í—ã —É–∂–µ –≥—Ä–∞–±–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä!")
            else
                ply:Notify("–≠—Ç–æ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–∂–µ –∫—Ç–æ-—Ç–æ –≥—Ä–∞–±–∏—Ç!")
            end
            return
        end

        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–∏—Ü–∏—é –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏
        if self:PoliceNearby() then
            ply:Notify("–°–ª–∏—à–∫–æ–º –æ–ø–∞—Å–Ω–æ! –ü–æ–ª–∏—Ü–∏—è —Ä—è–¥–æ–º!")
            return
        end

        -- –ù–∞—á–∏–Ω–∞–µ–º –æ–≥—Ä–∞–±–ª–µ–Ω–∏–µ
        self:SetStatus("Robbing")
        self:SetRobberyTime(CONFIG.robberyTime)
        self:SetStartTime(CurTime())
        self.robber = ply
        self.robberyActive = true

        -- –û–ø–æ–≤–µ—â–∞–µ–º –ø–æ–ª–∏—Ü–∏—é
        self:AlertPolice(ply)

        ply:Notify("–ù–∞—á–∞—Ç–æ –æ–≥—Ä–∞–±–ª–µ–Ω–∏–µ! –û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å —Ä—è–¥–æ–º " .. CONFIG.robberyTime .. " —Å–µ–∫—É–Ω–¥!")

        -- –¢–∞–π–º–µ—Ä –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è
        self.robberyTimer = "container_robbery_" .. self:EntIndex()
        timer.Create(self.robberyTimer, CONFIG.robberyTime, 1, function()
            if IsValid(self) and IsValid(self.robber) then
                self:GiveReward(self.robber)
                self:StartCooldown()
            end
        end)
    end

    function ENT:Think()
        if self.robberyActive then
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ —É—à–µ–ª –ª–∏ –≥—Ä–∞–±–∏—Ç–µ–ª—å
            if not IsValid(self.robber) or self.robber:GetPos():Distance(self:GetPos()) > 200 then
                if IsValid(self.robber) then
                    self.robber:Notify("–û–≥—Ä–∞–±–ª–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ! –í—ã –æ—Ç–æ—à–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ!")
                end
                self:ResetRobbery()
                return
            end
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –ø–æ—è–≤–∏–ª–∞—Å—å –ª–∏ –ø–æ–ª–∏—Ü–∏—è
            if self:PoliceNearby() then
                if IsValid(self.robber) then
                    self.robber:Notify("–û–≥—Ä–∞–±–ª–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ! –ü—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è –ø–æ–ª–∏—Ü–∏—è!")
                end
                self:ResetRobbery()
                return
            end
            
            self:NextThink(CurTime() + 1)
            return true
        end
    end

    function ENT:OnRemove()
        if self.robberyTimer then
            timer.Remove(self.robberyTimer)
        end
        
        -- –£–¥–∞–ª—è–µ–º –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–≥—Ä–∞–±–ª–µ–Ω–∏–π –ø–ª–∞–≥–∏–Ω–∞
        if PLUGIN and PLUGIN.activeRobberies then
            PLUGIN.activeRobberies[self:EntIndex()] = nil
        end
    end
end

if CLIENT then
    -- –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å –∑–∞—â–∏—Ç–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
    local function GetEntityStatusSafe(ent)
        if not IsValid(ent) then return "Invalid" end
        if not isfunction(ent.GetStatus) then return "NoGetStatus" end
        
        local status = ent:GetStatus()
        return status or "Unknown"
    end

    -- –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è
    local function GetRobberyTimeSafe(ent)
        if not IsValid(ent) then return 0 end
        if not isfunction(ent.GetRobberyTime) then return 0 end
        
        return ent:GetRobberyTime() or 0
    end

    -- –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞
    local function GetStartTimeSafe(ent)
        if not IsValid(ent) then return 0 end
        if not isfunction(ent.GetStartTime) then return 0 end
        
        return ent:GetStartTime() or 0
    end

    -- –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏
    local function GetTimeLeftSafe(ent)
        if not IsValid(ent) then return 0 end
        
        local startTime = GetStartTimeSafe(ent)
        local robberyTime = GetRobberyTimeSafe(ent)
        
        if startTime == 0 or robberyTime == 0 then return 0 end
        
        local elapsed = CurTime() - startTime
        return math.max(0, robberyTime - elapsed)
    end

    -- –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏
    local function GetCooldownEndSafe(ent)
        if not IsValid(ent) then return 0 end
        if not isfunction(ent.GetCooldownEnd) then return 0 end
        
        return ent:GetCooldownEnd() or 0
    end

    -- –ö—ç—à –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    local processedContainers = {}
    local lastClearTime = CurTime()

    -- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–ª–∞–≥–∏–Ω–∞
    local function GetPlugin()
        return ix.plugin and ix.plugin.Get and ix.plugin.Get("container_robbery")
    end

    -- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞
    local function GetStatusText(status)
        local plugin = GetPlugin()
        if plugin and plugin.robberyStatus then
            return plugin.robberyStatus[status] or status
        end
        
        -- –†–µ–∑–µ—Ä–≤–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã —Å—Ç–∞—Ç—É—Å–æ–≤
        local defaultStatuses = {
            ["Idle"] = "–°–≤–æ–±–æ–¥–µ–Ω",
            ["Robbing"] = "–û–≥—Ä–∞–±–ª–µ–Ω–∏–µ...",
            ["Cooldown"] = "–ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞",
            ["Invalid"] = "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω",
            ["NoGetStatus"] = "–û—à–∏–±–∫–∞ —Å—Ç–∞—Ç—É—Å–∞",
            ["Unknown"] = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        }
        
        return defaultStatuses[status] or status
    end

    hook.Add("PopulateEntityInfo", "ixContainerRobberyInfo", function(ent, tooltip)
        if ent:GetClass() ~= "ix_container_robbery" then return end

        -- –û—á–∏—â–∞–µ–º –∫—ç—à –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
        if CurTime() - lastClearTime > 1 then
            processedContainers = {}
            lastClearTime = CurTime()
        end

        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ –ª–∏ –º—ã —É–∂–µ —ç—Ç—É entity
        local entIndex = ent:EntIndex()
        if processedContainers[entIndex] then return end
        processedContainers[entIndex] = true

        -- –ó–∞—â–∏—Ç–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ—Ç–æ–¥–æ–≤
        if not isfunction(ent.GetStatus) then
            local row = tooltip:AddRow("error")
            row:SetText("–û—à–∏–±–∫–∞: GetStatus –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω")
            row:SetBackgroundColor(Color(255, 0, 0))
            row:SizeToContents()
            return
        end

        -- –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        local status = GetEntityStatusSafe(ent)
        local robberyTime = GetRobberyTimeSafe(ent)
        local timeLeft = GetTimeLeftSafe(ent)
        local cooldownEnd = GetCooldownEndSafe(ent)

        -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
        local name = tooltip:AddRow("name")
        name:SetText("–Ø—â–∏–∫ c —Ü–µ–Ω–Ω–æ—Å—Ç—è–º–∏")
        name:SetBackgroundColor(Color(50, 0, 0))
        name:SetImportant()
        name:SizeToContents()

        -- –°—Ç–∞—Ç—É—Å - –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        local statusRow = tooltip:AddRow("status")
        local statusText = GetStatusText(status)
        statusRow:SetText("–°—Ç–∞—Ç—É—Å: " .. statusText)
        
        -- –¶–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if status == "Idle" then
            statusRow:SetBackgroundColor(Color(50, 50, 50))
        elseif status == "Robbing" then
            statusRow:SetBackgroundColor(Color(50, 30, 0))
        elseif status == "Cooldown" then
            statusRow:SetBackgroundColor(Color(30, 30, 30))
        else
            statusRow:SetBackgroundColor(Color(30, 30, 30))
        end
        
        statusRow:SizeToContents()

        -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        if status == "Robbing" then
            -- –í—Ä–µ–º—è –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è
            if robberyTime > 0 then
                local timeRow = tooltip:AddRow("robbery_time")
                timeRow:SetText("–û–±—â–µ–µ –≤—Ä–µ–º—è: " .. robberyTime .. " —Å–µ–∫")
                timeRow:SetBackgroundColor(Color(40, 20, 0))
                timeRow:SizeToContents()
            end
            
            -- –û—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
            if timeLeft > 0 then
                local timeLeftRow = tooltip:AddRow("time_left")
                timeLeftRow:SetText("–û—Å—Ç–∞–ª–æ—Å—å: " .. math.Round(timeLeft) .. " —Å–µ–∫")
                timeLeftRow:SetBackgroundColor(Color(60, 30, 0))
                timeLeftRow:SizeToContents()
                
                -- –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ
                if robberyTime > 0 then
                    local progress = 100 - math.Round((timeLeft / robberyTime) * 100)
                    local progressRow = tooltip:AddRow("progress")
                    progressRow:SetText("–ü—Ä–æ–≥—Ä–µ—Å—Å: " .. progress .. "%")
                    progressRow:SetBackgroundColor(Color(70, 35, 0))
                    progressRow:SizeToContents()
                end
            end
            
            -- –ü—Ä–µ–¥—É—Ä–µ–∂–¥–∞–Ω–∏–µ
            local warnRow = tooltip:AddRow("warning")
            warnRow:SetText("–ù–µ –æ—Ç—Ö–æ–¥–∏—Ç–µ –¥–∞–ª–µ–∫–æ –æ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞!")
            warnRow:SetBackgroundColor(Color(100, 50, 0))
            warnRow:SizeToContents()
            
        elseif status == "Cooldown" then
            -- –û—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏
            if cooldownEnd > 0 then
                local cooldownLeft = math.max(0, cooldownEnd - CurTime())
                local timeLeftRow = tooltip:AddRow("cooldown_left")
                timeLeftRow:SetText("–ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞: " .. math.Round(cooldownLeft) .. " —Å–µ–∫")
                timeLeftRow:SetBackgroundColor(Color(30, 30, 30))
                timeLeftRow:SizeToContents()
                
                -- –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏
                local progress = math.Round((cooldownLeft / CONFIG.cooldownTime) * 100)
                local progressRow = tooltip:AddRow("cooldown_progress")
                progressRow:SetText("–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: " .. (100 - progress) .. "%")
                progressRow:SetBackgroundColor(Color(40, 40, 40))
                progressRow:SizeToContents()
            end
            
        elseif status == "Idle" then
            local infoRow = tooltip:AddRow("info")
            infoRow:SetText("–ì–æ—Ç–æ–≤ –∫ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—é")
            infoRow:SetBackgroundColor(Color(0, 50, 0))
            infoRow:SizeToContents()
            
            local rewardRow = tooltip:AddRow("reward")
            rewardRow:SetText("–ù–∞–≥—Ä–∞–¥–∞: ‚òã" .. CONFIG.minReward .. " - ‚òã" .. CONFIG.maxReward)
            rewardRow:SetBackgroundColor(Color(0, 60, 0))
            rewardRow:SizeToContents()
            
            local timeRow = tooltip:AddRow("time_info")
            timeRow:SetText("–í—Ä–µ–º—è –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è: " .. CONFIG.robberyTime .. " —Å–µ–∫")
            timeRow:SetBackgroundColor(Color(0, 70, 0))
            timeRow:SizeToContents()
        end
        
        -- –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
        local useRow = tooltip:AddRow("usage")
        useRow:SetText("–ù–∞–∂–º–∏—Ç–µ E –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è")
        useRow:SetBackgroundColor(Color(20, 20, 20))
        useRow:SizeToContents()
        
        -- –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–æ–ª–∏—Ü–∏–∏
        if status == "Idle" then
            local policeRow = tooltip:AddRow("police_warning")
            policeRow:SetText("–ü–æ–ª–∏—Ü–∏—è –±—É–¥–µ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∞!")
            policeRow:SetBackgroundColor(Color(100, 0, 0))
            policeRow:SizeToContents()
        end
    end)

    -- –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    hook.Add("Think", "ixContainerClearCache", function()
        if CurTime() - lastClearTime > 0.1 then
            processedContainers = {}
            lastClearTime = CurTime()
        end
    end)

    -- 3D –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    function ENT:Draw()
        self:DrawModel()
        
        local distance = self:GetPos():Distance(LocalPlayer():GetPos())
        if distance > 300 then return end
        
        local status = self:GetStatus()
        local statusText = STATUS_TEXTS[status] or status
        
        local ang = self:GetAngles()
        ang:RotateAroundAxis(ang:Up(), 90)
        ang:RotateAroundAxis(ang:Forward(), 90)
        
        local pos = self:GetPos() + self:GetUp() * 60
        
        cam.Start3D2D(pos, ang, 0.1)
            -- –§–æ–Ω
            draw.RoundedBox(8, -70, -25, 140, 50, Color(0, 0, 0, 200))
            
            -- –†–∞–º–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
            if status == "Robbing" then
                surface.SetDrawColor(255, 100, 0, 255)
            elseif status == "Cooldown" then
                surface.SetDrawColor(100, 100, 100, 255)
            else
                surface.SetDrawColor(0, 150, 0, 255)
            end
            surface.DrawOutlinedRect(-70, -25, 140, 50, 2)
            
            -- –¢–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞
            draw.SimpleText("–ö–û–ù–¢–ï–ô–ù–ï–†", "DermaDefaultBold", 0, -15, 
                color_white, TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER)
            draw.SimpleText(statusText, "DermaDefault", 0, 0, 
                color_white, TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER)
            
            -- –¢–∞–π–º–µ—Ä
            if status == "Robbing" then
                local timeLeft = math.Round((self:GetStartTime() + self:GetRobberyTime()) - CurTime())
                draw.SimpleText(timeLeft .. " —Å–µ–∫", "DermaDefault", 0, 15, 
                    Color(255, 100, 0), TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER)
            elseif status == "Cooldown" then
                local timeLeft = math.Round(self:GetCooldownEnd() - CurTime())
                draw.SimpleText(timeLeft .. " —Å–µ–∫", "DermaDefault", 0, 15, 
                    Color(150, 150, 150), TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER)
            end
        cam.End3D2D()
    end

    -- –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–π HUDPaint —Ö—É–∫ —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
    hook.Remove("HUDPaint", "ContainerRobberyInfo")
end